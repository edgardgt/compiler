package compiler.scanner;/* Scanner.java *///import org.antlr.v4.runtime.ANTLRFileStream;import org.antlr.v4.runtime.*;import java.util.LinkedList;public class Scanner{/* Campos Scanner*/	private Decaf lexer; //lexer que se puede utilizar desde la clase Parser	private String file;	private Decaf lexertmp;	private LinkedList<MiToken> miListadeTokens = new LinkedList<MiToken>();	/* Construtor Scanner*/	public Scanner (String archivo)throws Exception  {		lexer = new Decaf(new ANTLRFileStream(archivo));		lexertmp = new Decaf(new ANTLRFileStream(archivo));		file = new String (archivo);		//while (lexer.nextToken().getType() != Token.EOF);	}	/* Metodos Scanner */		public void Start(){		System.out.println("entrada: " + file ); // solo para debug		while (lexer.nextToken().getType() != Token.EOF);	}	public Decaf lexer(){		return lexer;	}		public String entrada(){		return file;	}	public LinkedList<MiToken> ListaDeTokens(){		Token token;		MiToken tokenTmp;		while (lexer.nextToken().getType() != Token.EOF){			token = lexertmp.nextToken();			//System.out.println("Linea: " + token.getLine() + ", rol: " + token.getType() + ", lexema: " + token.getText());			//System.out.println("Linea: " + token.getLine() + ", rol: " + lexer.ruleNames[token.getType()-1] + ", lexema: " + token.getText());			//tokenTmp = new MiToken(token.getLine(), token.getType(), token.getText());			tokenTmp = new MiToken(token.getLine(), lexer.ruleNames[token.getType()-1], token.getText());			miListadeTokens.add(tokenTmp);		}			//System.out.println(miListadeTokens);		lexer.reset();		return miListadeTokens;	}}