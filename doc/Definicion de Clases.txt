DEFINICION DE LAS CLASES 
----------------------------------------------------------------------------------------------------------------------------------------------------------------
CLASE:		Compiler
ATRIBUTOS	argsValidos		: Indica si los argumentos de entrada son validos o no. Si son validos permmitira ejecutar el programa, si no, lo abortara.
			archivoEntrada	: Almacena el nombre del archivo de entrada
			archivoSalida	: Almacena el nombre del archivo donde quedara la salida
			argTarget		: Almacena el valor asignado al argumento -target
			argOpt			: Almacena el valor asignado al argumento -opt
			fasesDebug		: Almacena todas las fases del compilador a las que se les debe realizar Debug (se puee debuggear mas de una fase)
			accionesEjecutar: Almacena las opciones del compilador que eben ser ejecutadas. Depende de los argumentos ingresados en opcion -target
			miListadeTokens : Lista utilizada para almacenar los tokens del programa de entrada
			miListadeReglas : Lista utilizada para almacenar las reglas el parser
METODOS:	NO HAY
----------------------------------------------------------------------------------------------------------------------------------------------------------------
CLASE		Scanner
ATRIBUTOS	lexer1			: Apuntador a lista de Tokens, para recorrerla
			lexer2			: Apuntador a lista de Tokens, para recorrerla
			file			: Nombre del archvo donde se encuentran los Tokens
			miListadeTokens	: Apuntador a Listado de Tokens
METODOS:	Scanner()		: Constructor
			Start()			: Obtiene el listado de tokens del archivoEntrada, lexer1 apunta a dicha lista
			lexer()			: Retorna un apuntador a la lista de tokens
			ListaDeTokens()	: Recorre el archivo de entrada y arma una lista de tokens en miListadeTokens
----------------------------------------------------------------------------------------------------------------------------------------------------------------
CLASE		MiToken
ATRIBUTOS	linea			: Indica la linea que esta siendo analizada
			tipo			: Codigo del lexema
			texto			: Lexema
METODOS		MiToken()		: Constructor
			getLinea()		: Retorna el numero de linea que esta siendo analizada
			getTipo()		: Retorna el Codigo el lexema encontrado
			getTexto()		: Retorna el Lexema Encontrado
			toString()		: Retorna el conjunto Linea, Tipo y Lexema encontrado
----------------------------------------------------------------------------------------------------------------------------------------------------------------
CLASE		CC4Parser
ATRIBUTOS	miParser		: Apuntador a lista de reglas del Parser
			miListadeReglas	: Almacena reglas del parser visitadas
METODOS		CC4Parser()		: Constructor
			ListaDeReglas()	: Retorna el apuntador al listado de reglas
			Parser()		: Retorna apuntador a reglas del Parser
----------------------------------------------------------------------------------------------------------------------------------------------------------------
